<?php

/**
 * @file
 * Enables Drupal to send e-mail using the PostageApp API.
 *
 */

/**
* Implements hook_help().
*/
function postageapp_help($path, $arg) {
  $output = '';
  switch ($path) {
    case "admin/help#postageapp":
      $output = '<p>'.  t("Allows you to using the PostageApp API to send mail. We can send mails without own mail server application on your server. Instead, module send all outgoing site emails to Postageapp. <br>There we may use templates to get html on the messages before they send to their recepients.<p> <b>Important for settings!</b> You need to make template before using it. See Postageapp docs for this. On this site we can setup template for each mail form. Go to settings link.<p> See <a href=\"@postageapp\" target=\"_blank\">postageapp site</a> for more info.", array('@postageapp' => url('http://postageapp.com'))) .'</p>';
      break;
    case "admin/config/services/postageapp":
      $output = '<p>'.  t("Enter text here to describe how to set up postageApp.  See http://postageapp.com for more info.") .'</p>';
      break;
  }
  return $output;
}

/**
 * Implements hook_menu()
 */
function postageapp_menu() {
  $items['admin/config/services/postageapp'] = array(
    'title' => 'PostageApp settings',
    'description' => t('Settings for PostageApp integration'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('postageapp_admin_form'),
    'access arguments' => array('administer postageapp'),
    'file' => 'include/postageapp.admin.inc',
    'type' => MENU_NORMAL_ITEM,
    'weight' => 0,
  );
  $items['admin/config/services/postageapp/settings'] = array(
    'title' => 'Settings',
    'type' => MENU_DEFAULT_LOCAL_TASK,
    '#weight' => 0,
  );

  $items['admin/config/services/postageapp/forms_vars'] = array(
    'title' => 'Forms & templates',
    'type' => MENU_LOCAL_TASK,
    'page callback' => 'postageapp_page_forms_vars',
    'access arguments' => array('administer postageapp'),
    'file' => 'include/postageapp.admin.inc',
    '#weight' => 2,
  );
  $items['admin/config/services/postageapp/forms_vars/%/%'] = array(
    'title' => 'Forms & templates',
    'type' => MENU_NORMAL_ITEM,
    'page callback' => 'postageapp_page_forms_vars',
    'page arguments' => array(5, 6),
    'access arguments' => array('administer postageapp'),
    'file' => 'include/postageapp.admin.inc',
    '#weight' => 2,
  );

  return $items;
}

/**
 * Implements hook_permission()
 */
function postageapp_permission() {
  return array(
    'administer postageapp' => array(
      'title' => t('Administer Postageapp'),
      'description' => t('Perform administration tasks for Postageapp.'),
    ),
  );
}

/**
 * Helper for PostageappDrupalMail to get additional vars for PA tpl.
 */
function postageapp_variables_submitted($post = NULL, $message) {
  //dpm($message);
  global $user;
  $vars = array();

//  $vars['form_id'] = $post['form_id'];

  $vars['subject'] = $message['subject'];
  $vars['message'] = $message['body'];
  //
  $vars['site_name'] = variable_get('site_name', '');

  if (!empty($user -> name)) {
    $vars['name'] = $user -> name;
  }

  if (@$post['mail']) {
    $vars['mail'] = @$post['mail'] ? $post['mail'] : @$post['name'];
  }

  // register form
  if ($post['form_id'] == 'user_register_form') {
    //
    $vars['name'] = $post['name'];
    $vars['mail'] = $post['mail'];

    $account = user_load_by_name($post['name']);

    $vars['one_time_login_url'] = user_pass_reset_url($account);
  }
  // reset passwd
  elseif ($post['form_id'] == 'user_pass') {
    if (valid_email_address($post['name'])) {
      $account = user_load_by_mail($post['name']);
    }
    else {
      $account = user_load_by_name($post['name']);
    }

    if ($account) {

      $vars['name'] = $account->name;
      $vars['mail'] = $account->mail;
      $vars['one_time_login_url'] = user_pass_reset_url($account);
    }
  }

  // allow other modules to use $vars to change it, or to add own variables
  drupal_alter('postageapp_vars', $vars, $post, $message);

  return $vars;
}
